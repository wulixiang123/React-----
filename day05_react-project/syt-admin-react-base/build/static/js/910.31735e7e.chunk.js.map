{"version":3,"file":"static/js/910.31735e7e.chunk.js","mappings":"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","sources":["api/hospital/hospitalList.ts","pages/hospital/hospitalList/HospitalList.tsx","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js"],"sourcesContent":["import {request} from '@utils/http'\r\nimport { IDepartmentList, IDistrictList, IDoctorList, IHospitalDetailResponse, IHospitalListParams, IHospitalListResponse, IScheduleResponse } from './model/hospitalListTypes'\r\n/**\r\n * 获取地区列表\r\n * @param id \r\n * @returns \r\n */\r\nexport const getDistrictList = (id:string | number)=>{\r\n    return request.get<any,IDistrictList>('/admin/cmn/dict/findByParentId/' + id)\r\n}\r\n/**\r\n * 获取医院列表分页数据\r\n * @param param0 \r\n * {page:当前页,limit：每页几条,hosname,hoscode,hostype,provinceCode,cityCode,districtCode,status}\r\n */\r\nexport const getHospitalList = ({page,limit,hosname,hoscode,hostype,provinceCode,cityCode,districtCode,status}:IHospitalListParams)=>{\r\n    return request.get<any, IHospitalListResponse>(`/admin/hosp/hospital/${page}/${limit}`,{\r\n        params:{\r\n            hoscode,\r\n            hosname,\r\n            hostype,\r\n            provinceCode,\r\n            cityCode,\r\n            districtCode,\r\n            status\r\n        }\r\n    })\r\n}\r\n/**\r\n * 根据id获取医院详情数据\r\n * @param id \r\n * @returns \r\n */\r\nexport const getHospitalDetail = (id:string)=>{\r\n    return request.get<any, IHospitalDetailResponse>('/admin/hosp/hospital/show/' + id)\r\n}\r\n\r\n// 切换医院上线下线状态\r\nexport const toggleState = (id:string,status:number)=>{\r\n    return request.get<any,null>(`/admin/hosp/hospital/updateStatus/${id}/${status}`)\r\n}\r\n\r\n// 根据医院编号获取科室列表\r\nexport const getDepartmentList = (hoscode:string) => {\r\n    return request.get<any,IDepartmentList>('/admin/hosp/department/' + hoscode)\r\n}\r\n\r\n// 科室排班日期分页数据\r\nexport const getScheduleList = (page:number,limit:number,hoscode:string,depcode:string)=>{\r\n    return request.get<any, IScheduleResponse>(`/admin/hosp/schedule/getScheduleRule/${page}/${limit}/${hoscode}/${depcode}`)\r\n}\r\n\r\n// 获取排班医生列表\r\nexport const getDoctorList = (hoscode:string,depcode:string,workDate:string)=>{\r\n    return request.get<any,IDoctorList>(`/admin/hosp/schedule/findScheduleList/${hoscode}/${depcode}/${workDate}`)\r\n}\r\n","import { Button, Card, Form, Image, Input, Select, Space, Table } from 'antd'\r\nimport {SearchOutlined} from '@ant-design/icons'\r\nimport React,{useState,useEffect} from 'react'\r\nimport { ColumnsType } from 'antd/lib/table'\r\nimport { IDistrictList, IHospitalItem, IHospitalList } from '@/api/hospital/model/hospitalListTypes'\r\nimport { getDistrictList, getHospitalList, toggleState } from '@/api/hospital/hospitalList'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst {Option} = Select\r\n\r\nexport default function HospitalList() {\r\n  const navigate = useNavigate()\r\n  const [form] = Form.useForm()\r\n\r\n  const onFinish = () => {\r\n    console.log(form.getFieldsValue());\r\n    setFields(form.getFieldsValue())// 设置fields 状态\r\n    setPage(1)//设置页\r\n  }\r\n\r\n  // 修改服务器上下线状态\r\n  const changeState = async (id:string,status:number)=>{\r\n    await toggleState(id,status);//服务器的数据状态被修改了\r\n    _getHospitalList()//刷新列表\r\n  }\r\n\r\n  const columns:ColumnsType<IHospitalItem> = [\r\n    {\r\n      align:'center',\r\n      title:'序号',\r\n      render(value:any,row:any,index:number){\r\n        return (index+1) + (page-1) * pageSize\r\n      }\r\n    },\r\n    {\r\n      title:'医院logo',\r\n      render(row:IHospitalItem){\r\n        return(\r\n          <Image width={100} src={'data:image/jpg;base64,' + row.logoData}/>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title:'医院名称',\r\n      dataIndex:'hosname'\r\n    },\r\n    {\r\n      title:'等级',\r\n      render(row:IHospitalItem){\r\n        return row.param.hostypeString\r\n      }\r\n    },\r\n    {\r\n      title:'详细地址',\r\n      render(row:IHospitalItem){\r\n        return row.param.fullAddress\r\n      }\r\n    },\r\n    {\r\n      title:'状态',\r\n      render(row:IHospitalItem){\r\n        return row.status ? '已上线':'未上线'\r\n      }\r\n    },\r\n    {\r\n      title:'创建时间',\r\n      dataIndex:'createTime'\r\n    },\r\n    {\r\n      title:'操作',\r\n      render(row:IHospitalItem){\r\n        return(\r\n          <Space>\r\n            <Button type='primary' onClick={()=>navigate('/syt/hospital/hospitalList/show/' + row.id)}>查看</Button>\r\n            <Button type='primary' onClick={()=>navigate('/syt/hospital/hospitalList/schedule/'+ row.hoscode)}>排班</Button>\r\n            <Button type='primary' onClick={()=>changeState(row.id,row.status?0:1)}>{row.status ? '下线':'上线'}</Button>\r\n          </Space>\r\n        )\r\n      }\r\n    },\r\n  ]\r\n  // 状态数据\r\n  let [provinceList,setProvinceList] = useState<IDistrictList>([])\r\n  let [cityList,setCityList] = useState<IDistrictList>([])\r\n  let [areaList,setAreaList] = useState<IDistrictList>([])\r\n  // 医院类型设置\r\n  let [types,setTypes] = useState<IDistrictList>([])\r\n  // 分页相关状态\r\n  let [page,setPage] = useState<number>(1)\r\n  let [pageSize,setPageSize] = useState<number>(3)\r\n  let [total,setTotal] = useState<number>(10)\r\n  let [hospitalList,setHospitalList] = useState<IHospitalList>([])\r\n  // 查询清空状态设置\r\n  let [fields,setFields] = useState({\r\n      hosname:undefined,\r\n      hoscode:undefined,\r\n      hostype:undefined,\r\n      provinceCode:undefined,\r\n      cityCode:undefined,\r\n      districtCode:undefined,\r\n      status:undefined\r\n  })\r\n  // 设置加载状态\r\n  let [loading,setLoading] = useState<boolean>(false)\r\n\r\n  const getProvince = async () => {\r\n    let provinceList = await getDistrictList(86)\r\n    console.log({provinceList});\r\n    setProvinceList(provinceList)// 设置省状态\r\n  }\r\n\r\n  // 根据id获取市列表数据\r\n  const getCities = async (id:string | number) => {\r\n    let cityList = await getDistrictList(id);\r\n    setCityList(cityList);\r\n    // 重置市的表单的值\r\n    // 重置区表单的值和 区状态数据为 []\r\n    form.setFieldsValue({\r\n      cityCode:undefined,\r\n      districtCode:undefined\r\n    })\r\n    setAreaList([])\r\n  }\r\n\r\n  // 根据市id获取区列表数据\r\n  const getArea = async (id:string | number) => {\r\n    let areaList = await getDistrictList(id)\r\n     console.log({areaList});\r\n    setAreaList(areaList)\r\n    form.setFieldsValue({\r\n      districtCode:undefined\r\n    })\r\n  }\r\n\r\n  const getTypes = async () => {\r\n    let types = await getDistrictList(10000)\r\n    console.log(types);\r\n    setTypes(types)\r\n    \r\n  }\r\n\r\n  // 获取医院列表分页数据\r\n  const _getHospitalList = async () => {\r\n    setLoading(true)\r\n    let {content,totalElements} = await getHospitalList({page,limit:pageSize,...fields})\r\n    console.log({content});\r\n    console.log({totalElements});\r\n    setHospitalList(content)\r\n    setTotal(totalElements)\r\n    setLoading(false)\r\n  }\r\n\r\n  // 清空\r\n  const clear = async () => {\r\n    form.resetFields()// 1. form表单的显示要清空\r\n    setFields({// 2. form状态数据要清空\r\n      hosname: undefined,\r\n      hoscode: undefined,\r\n      hostype: undefined,\r\n      provinceCode: undefined,\r\n      cityCode: undefined,\r\n      districtCode: undefined,\r\n      status: undefined\r\n    })\r\n    page !== 1 && setPage(1)// 3. page设置到第一页\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getProvince()\r\n    getTypes()\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    _getHospitalList()\r\n  },[page,pageSize,fields.hosname,fields.hoscode,fields.hostype,fields.provinceCode,fields.cityCode,fields.districtCode,fields.status])\r\n\r\n  return (\r\n    <Card>\r\n      <Form layout='inline' onFinish={onFinish} form={form}>\r\n                <Form.Item>\r\n                    <Select className='mb' style={{ width: 150 }} placeholder='请选择省' onChange={getCities}>\r\n                        {provinceList.map(province=>(\r\n                          <Option key={province.id} value={province.value}>{province.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name='cityCode'>\r\n                    <Select style={{ width: 150 }} placeholder='请选择市' onChange={getArea}>\r\n                        {cityList.map(city => (\r\n                          <Option key={city.value}>{city.name}</Option>\r\n                        ))}\r\n                        \r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name='districtCode'>\r\n                    <Select style={{ width: 150 }} placeholder='请选择区'>\r\n                        {areaList.map(area=>(\r\n                          <Option key={area.id} value={area.value}>{area.name}</Option>\r\n                        ))}\r\n                        \r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name='hosname'>\r\n                    <Input placeholder='医院名称' />\r\n                </Form.Item>\r\n                <Form.Item name='hoscode'>\r\n                    <Input placeholder='医院编号' />\r\n                </Form.Item>\r\n                <Form.Item name='hostype'>\r\n                    <Select style={{ width: 150 }} placeholder='医院类型'>\r\n                        {types.map(type=>(\r\n                          <Option key={type.id} value={type.value}>{type.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name='status'>\r\n                    <Select style={{ width: 150 }} placeholder='医院状态'>\r\n                        <Option value={0}>未上线</Option>\r\n                        <Option value={1}>已上线</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Space>\r\n                        <Button type='primary' icon={<SearchOutlined />} htmlType='submit'>查询</Button>\r\n                        <Button disabled={Object.values(fields).every(item=>item===undefined)} onClick={clear}>清空</Button>\r\n                    </Space>\r\n                </Form.Item>\r\n            </Form>\r\n            <Table \r\n              loading={loading}\r\n              className='mt'\r\n              rowKey={'id'}\r\n              columns={columns}\r\n              dataSource={hospitalList}\r\n              pagination={{\r\n                current:page,\r\n                pageSize,\r\n                total,\r\n                onChange(page:number,pageSize:number){\r\n                  setPage(page);\r\n                  setPageSize(pageSize)\r\n                }\r\n              }}\r\n              >\r\n              </Table>\r\n    </Card>\r\n  )\r\n}\r\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  var className = _ref.className,\n      direction = _ref.direction,\n      index = _ref.index,\n      marginDirection = _ref.marginDirection,\n      children = _ref.children,\n      split = _ref.split,\n      wrap = _ref.wrap;\n\n  var _React$useContext = React.useContext(SpaceContext),\n      horizontalSize = _React$useContext.horizontalSize,\n      verticalSize = _React$useContext.verticalSize,\n      latestIndex = _React$useContext.latestIndex,\n      supportFlexGap = _React$useContext.supportFlexGap;\n\n  var style = {};\n\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = _extends(_extends({}, index < latestIndex && _defineProperty({}, marginDirection, horizontalSize / (split ? 2 : 1))), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n\n  if (children === null || children === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(className, \"-split\"),\n    style: style\n  }, split));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { ConfigContext } from '../config-provider';\nimport Item from './Item';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nexport var SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\n\nvar Space = function Space(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      space = _React$useContext.space,\n      directionConfig = _React$useContext.direction;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? (space === null || space === void 0 ? void 0 : space.size) || 'small' : _props$size,\n      align = props.align,\n      className = props.className,\n      children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      customizePrefixCls = props.prefixCls,\n      split = props.split,\n      style = props.style,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? false : _props$wrap,\n      otherProps = __rest(props, [\"size\", \"align\", \"className\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n\n  var supportFlexGap = useFlexGapSupport();\n\n  var _React$useMemo = React.useMemo(function () {\n    return (Array.isArray(size) ? size : [size, size]).map(function (item) {\n      return getNumberSize(item);\n    });\n  }, [size]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      horizontalSize = _React$useMemo2[0],\n      verticalSize = _React$useMemo2[1];\n\n  var childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  var mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  var prefixCls = getPrefixCls('space', customizePrefixCls);\n  var cn = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), directionConfig === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-align-\").concat(mergedAlign), mergedAlign), _classNames), className);\n  var itemClassName = \"\".concat(prefixCls, \"-item\");\n  var marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight'; // Calculate latest one\n\n  var latestIndex = 0;\n  var nodes = childNodes.map(function (child, i) {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n\n    var key = child && child.key || \"\".concat(itemClassName, \"-\").concat(i);\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: key,\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n  });\n  var spaceContext = React.useMemo(function () {\n    return {\n      horizontalSize: horizontalSize,\n      verticalSize: verticalSize,\n      latestIndex: latestIndex,\n      supportFlexGap: supportFlexGap\n    };\n  }, [horizontalSize, verticalSize, latestIndex, supportFlexGap]); // =========================== Render ===========================\n\n  if (childNodes.length === 0) {\n    return null;\n  }\n\n  var gapStyle = {};\n\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap'; // Patch for gap not support\n\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn,\n    style: _extends(_extends({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes));\n};\n\nexport default Space;"],"names":["getDistrictList","id","request","getHospitalList","page","limit","hosname","hoscode","hostype","provinceCode","cityCode","districtCode","status","params","getHospitalDetail","toggleState","getDepartmentList","getScheduleList","depcode","getDoctorList","workDate","Option","Select","HospitalList","navigate","useNavigate","Form","form","changeState","_getHospitalList","columns","align","title","render","value","row","index","pageSize","width","src","logoData","dataIndex","param","hostypeString","fullAddress","type","onClick","useState","provinceList","setProvinceList","cityList","setCityList","areaList","setAreaList","types","setTypes","setPage","setPageSize","total","setTotal","hospitalList","setHospitalList","undefined","fields","setFields","loading","setLoading","getProvince","console","log","getCities","setFieldsValue","getArea","getTypes","content","totalElements","clear","resetFields","useEffect","layout","onFinish","getFieldsValue","className","style","placeholder","onChange","map","province","name","city","area","icon","htmlType","disabled","Object","values","every","item","rowKey","dataSource","pagination","current","Item","_ref","direction","marginDirection","children","split","wrap","_React$useContext","React","SpaceContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","marginBottom","_extends","_defineProperty","paddingBottom","concat","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","spaceSize","small","middle","large","props","_classNames","ConfigContext","getPrefixCls","space","directionConfig","_props$size","size","_props$direction","customizePrefixCls","prefixCls","_props$wrap","otherProps","useFlexGapSupport","_React$useMemo","Array","isArray","getNumberSize","_React$useMemo2","_slicedToArray","childNodes","toArray","keepEmpty","mergedAlign","cn","classNames","itemClassName","nodes","child","key","spaceContext","gapStyle","flexWrap","columnGap","rowGap","Provider"],"sourceRoot":""}