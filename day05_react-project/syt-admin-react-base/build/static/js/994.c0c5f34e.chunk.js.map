{"version":3,"file":"static/js/994.c0c5f34e.chunk.js","mappings":"0SAOaA,EAAkB,SAACC,GAC5B,OAAOC,EAAAA,EAAAA,IAA+B,kCAAoCD,IAOjEE,EAAkB,SAAC,GAAsG,IAArGC,EAAoG,EAApGA,KAAKC,EAA+F,EAA/FA,MAAMC,EAAyF,EAAzFA,QAAQC,EAAiF,EAAjFA,QAAQC,EAAyE,EAAzEA,QAAQC,EAAiE,EAAjEA,aAAaC,EAAoD,EAApDA,SAASC,EAA2C,EAA3CA,aAAaC,EAA8B,EAA9BA,OACnG,OAAOV,EAAAA,EAAAA,IAAA,+BAAgEE,EAAhE,YAAwEC,GAAQ,CACnFQ,OAAO,CACHN,QAAAA,EACAD,QAAAA,EACAE,QAAAA,EACAC,aAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,OAAAA,MASCE,EAAoB,SAACb,GAC9B,OAAOC,EAAAA,EAAAA,IAA0C,6BAA+BD,IAIvEc,EAAc,SAACd,EAAUW,GAClC,OAAOV,EAAAA,EAAAA,IAAA,4CAA2DD,EAA3D,YAAiEW,KAI/DI,EAAoB,SAACT,GAC9B,OAAOL,EAAAA,EAAAA,IAAiC,0BAA4BK,IAI3DU,EAAkB,SAACb,EAAYC,EAAaE,EAAeW,GACpE,OAAOhB,EAAAA,EAAAA,IAAA,+CAA4EE,EAA5E,YAAoFC,EAApF,YAA6FE,EAA7F,YAAwGW,KAItGC,EAAgB,SAACZ,EAAeW,EAAeE,GACxD,OAAOlB,EAAAA,EAAAA,IAAA,gDAAsEK,EAAtE,YAAiFW,EAAjF,YAA4FE,M,kLC/CxF,SAASC,IACpB,IAmBA,GAA8BC,EAAAA,EAAAA,UAAwB,IAAtD,eAAKC,EAAL,KAAeC,EAAf,KACMC,EAAQ,mCAAG,qGACGzB,EAAAA,EAAAA,IAAgB,GADnB,OACT0B,EADS,OAGbF,EAAYE,GAHC,2CAAH,qDAQd,OAHAC,EAAAA,EAAAA,YAAU,WACNF,MACD,KAEC,SAAC,IAAD,WACI,SAAC,IAAD,CACIG,OAAQ,KACRC,QAhCsB,CAC9B,CACIC,MAAO,eACPC,UAAW,QAEf,CACID,MAAO,eACPC,UAAW,YAEf,CACID,MAAO,SACPC,UAAW,SAEf,CACID,MAAO,2BACPC,UAAW,eAkBPC,WAAYT,EACZU,YAAY,EACZC,WAAY,CACRC,WAAY,YAAqC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC/B,OAAIA,EAAOC,YAQJH,GACH,SAAC,IAAD,CAAcI,QAAS,SAAAC,GAAC,OAAIJ,EAASC,EAAQG,OAE7C,SAAC,IAAD,CAAeD,QAAO,mCAAE,WAAMC,GAAN,sFAEhBH,EAAOI,gBAFS,OAEhB,EAAiBC,OAFD,iCAGK3C,EAAAA,EAAAA,IAAgBsC,EAAOrC,IAH5B,OAGZyC,EAHY,OAIhBE,QAAQC,IAAI,CAACH,SAAAA,IACbJ,EAAOI,SAAWA,EALF,OAOpBL,EAASC,EAAQG,GAPG,2CAAF,yDAVf,gBAAKK,MAAO,CAACC,QAAQ,eAAeC,MAAM","sources":["api/hospital/hospitalList.ts","pages/cmn/Dict/Dict.tsx"],"sourcesContent":["import {request} from '@utils/http'\r\nimport { IDepartmentList, IDistrictList, IDoctorList, IHospitalDetailResponse, IHospitalListParams, IHospitalListResponse, IScheduleResponse } from './model/hospitalListTypes'\r\n/**\r\n * 获取地区列表\r\n * @param id \r\n * @returns \r\n */\r\nexport const getDistrictList = (id:string | number)=>{\r\n    return request.get<any,IDistrictList>('/admin/cmn/dict/findByParentId/' + id)\r\n}\r\n/**\r\n * 获取医院列表分页数据\r\n * @param param0 \r\n * {page:当前页,limit：每页几条,hosname,hoscode,hostype,provinceCode,cityCode,districtCode,status}\r\n */\r\nexport const getHospitalList = ({page,limit,hosname,hoscode,hostype,provinceCode,cityCode,districtCode,status}:IHospitalListParams)=>{\r\n    return request.get<any, IHospitalListResponse>(`/admin/hosp/hospital/${page}/${limit}`,{\r\n        params:{\r\n            hoscode,\r\n            hosname,\r\n            hostype,\r\n            provinceCode,\r\n            cityCode,\r\n            districtCode,\r\n            status\r\n        }\r\n    })\r\n}\r\n/**\r\n * 根据id获取医院详情数据\r\n * @param id \r\n * @returns \r\n */\r\nexport const getHospitalDetail = (id:string)=>{\r\n    return request.get<any, IHospitalDetailResponse>('/admin/hosp/hospital/show/' + id)\r\n}\r\n\r\n// 切换医院上线下线状态\r\nexport const toggleState = (id:string,status:number)=>{\r\n    return request.get<any,null>(`/admin/hosp/hospital/updateStatus/${id}/${status}`)\r\n}\r\n\r\n// 根据医院编号获取科室列表\r\nexport const getDepartmentList = (hoscode:string) => {\r\n    return request.get<any,IDepartmentList>('/admin/hosp/department/' + hoscode)\r\n}\r\n\r\n// 科室排班日期分页数据\r\nexport const getScheduleList = (page:number,limit:number,hoscode:string,depcode:string)=>{\r\n    return request.get<any, IScheduleResponse>(`/admin/hosp/schedule/getScheduleRule/${page}/${limit}/${hoscode}/${depcode}`)\r\n}\r\n\r\n// 获取排班医生列表\r\nexport const getDoctorList = (hoscode:string,depcode:string,workDate:string)=>{\r\n    return request.get<any,IDoctorList>(`/admin/hosp/schedule/findScheduleList/${hoscode}/${depcode}/${workDate}`)\r\n}\r\n","import { getDistrictList } from '@/api/hospital/hospitalList'\r\nimport { IDistrictList } from '@/api/hospital/model/hospitalListTypes'\r\nimport { Card, Table } from 'antd'\r\nimport { ColumnsType } from 'antd/lib/table'\r\nimport { RightOutlined, DownOutlined } from '@ant-design/icons'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function Dict() {\r\n    const columns: ColumnsType<any> = [\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name'\r\n        },\r\n        {\r\n            title: '编码',\r\n            dataIndex: 'dictCode'\r\n        },\r\n        {\r\n            title: '值',\r\n            dataIndex: 'value'\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'createTime'\r\n        }\r\n    ]\r\n    // 定义状态\r\n    let [dictList, setDictList] = useState<IDistrictList>([])\r\n    const _getDict = async () => {\r\n        let res = await getDistrictList(1);\r\n        // console.log('res: ', res);\r\n        setDictList(res);\r\n    }\r\n    useEffect(() => {\r\n        _getDict();\r\n    }, [])\r\n    return (\r\n        <Card>\r\n            <Table\r\n                rowKey={'id'}\r\n                columns={columns}\r\n                dataSource={dictList}\r\n                pagination={false}\r\n                expandable={{\r\n                    expandIcon: ({ expanded, onExpand, record }) => {\r\n                        if(!record.hasChildren){\r\n                            return <div style={{display:'inline-block',width:15}}></div>\r\n                        }\r\n\r\n                        // console.log('expanded: ', expanded);// 展开还是收起的一个标识 boolean\r\n                        // console.log('onExpand:' , onExpand);// 是展开节点的函数， 当当前行对象中有children属性的时候，就会将children数组中的内容，作为子节点展开\r\n                        // console.log('record: ', record);// 当前行对象\r\n\r\n                        return expanded ? (\r\n                            <DownOutlined onClick={e => onExpand(record, e)} />\r\n                        ) : (\r\n                            <RightOutlined onClick={async e =>{\r\n                                // 发送ajax请求，将获取到的子节点列表数据，添加到 record的 children属性上\r\n                                if(!record.children?.length){\r\n                                    let children = await getDistrictList(record.id)\r\n                                    console.log({children});\r\n                                    record.children = children\r\n                                }\r\n                                onExpand(record, e)\r\n                            }} />\r\n                        )\r\n                    }\r\n\r\n                }}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n"],"names":["getDistrictList","id","request","getHospitalList","page","limit","hosname","hoscode","hostype","provinceCode","cityCode","districtCode","status","params","getHospitalDetail","toggleState","getDepartmentList","getScheduleList","depcode","getDoctorList","workDate","Dict","useState","dictList","setDictList","_getDict","res","useEffect","rowKey","columns","title","dataIndex","dataSource","pagination","expandable","expandIcon","expanded","onExpand","record","hasChildren","onClick","e","children","length","console","log","style","display","width"],"sourceRoot":""}