{"version":3,"file":"static/js/569.56101973.chunk.js","mappings":"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","sources":["api/hospital/hospitalList.ts","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","pages/hospital/hospitalList/components/HospitalSchedule.tsx"],"sourcesContent":["import {request} from '@utils/http'\r\nimport { IDepartmentList, IDistrictList, IDoctorList, IHospitalDetailResponse, IHospitalListParams, IHospitalListResponse, IScheduleResponse } from './model/hospitalListTypes'\r\n/**\r\n * 获取地区列表\r\n * @param id \r\n * @returns \r\n */\r\nexport const getDistrictList = (id:string | number)=>{\r\n    return request.get<any,IDistrictList>('/admin/cmn/dict/findByParentId/' + id)\r\n}\r\n/**\r\n * 获取医院列表分页数据\r\n * @param param0 \r\n * {page:当前页,limit：每页几条,hosname,hoscode,hostype,provinceCode,cityCode,districtCode,status}\r\n */\r\nexport const getHospitalList = ({page,limit,hosname,hoscode,hostype,provinceCode,cityCode,districtCode,status}:IHospitalListParams)=>{\r\n    return request.get<any, IHospitalListResponse>(`/admin/hosp/hospital/${page}/${limit}`,{\r\n        params:{\r\n            hoscode,\r\n            hosname,\r\n            hostype,\r\n            provinceCode,\r\n            cityCode,\r\n            districtCode,\r\n            status\r\n        }\r\n    })\r\n}\r\n/**\r\n * 根据id获取医院详情数据\r\n * @param id \r\n * @returns \r\n */\r\nexport const getHospitalDetail = (id:string)=>{\r\n    return request.get<any, IHospitalDetailResponse>('/admin/hosp/hospital/show/' + id)\r\n}\r\n\r\n// 切换医院上线下线状态\r\nexport const toggleState = (id:string,status:number)=>{\r\n    return request.get<any,null>(`/admin/hosp/hospital/updateStatus/${id}/${status}`)\r\n}\r\n\r\n// 根据医院编号获取科室列表\r\nexport const getDepartmentList = (hoscode:string) => {\r\n    return request.get<any,IDepartmentList>('/admin/hosp/department/' + hoscode)\r\n}\r\n\r\n// 科室排班日期分页数据\r\nexport const getScheduleList = (page:number,limit:number,hoscode:string,depcode:string)=>{\r\n    return request.get<any, IScheduleResponse>(`/admin/hosp/schedule/getScheduleRule/${page}/${limit}/${hoscode}/${depcode}`)\r\n}\r\n\r\n// 获取排班医生列表\r\nexport const getDoctorList = (hoscode:string,depcode:string,workDate:string)=>{\r\n    return request.get<any,IDoctorList>(`/admin/hosp/schedule/findScheduleList/${hoscode}/${depcode}/${workDate}`)\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      checked = _a.checked,\n      onChange = _a.onChange,\n      onClick = _a.onClick,\n      restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\n\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CheckableTag from './CheckableTag';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\n\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      style = _a.style,\n      children = _a.children,\n      icon = _a.icon,\n      color = _a.color,\n      onClose = _a.onClose,\n      closeIcon = _a.closeIcon,\n      _a$closable = _a.closable,\n      closable = _a$closable === void 0 ? false : _a$closable,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n\n    return null;\n  };\n\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\n\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nTag.displayName = 'Tag';\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import { getDepartmentList, getDoctorList, getScheduleList } from '@/api/hospital/hospitalList'\r\nimport { IDepartmentList, IDoctorList, IScheduleList } from '@/api/hospital/model/hospitalListTypes'\r\nimport { Button, Card, Col, Pagination, Row, Table, Tag, Tree } from 'antd'\r\nimport { ColumnsType } from 'antd/lib/table'\r\nimport { DataNode } from 'antd/lib/tree'\r\nimport React,{useState,useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function HospitalSchedule() {\r\n    let {hoscode} = useParams()// 从path中获取hoscode\r\n\r\n    const columns:ColumnsType<any> = [\r\n        {\r\n            title:'序号',\r\n            render(value:any,row:any,index:number){\r\n            return (index+1) + (page-1) * pageSize\r\n            }\r\n        },\r\n        {\r\n            title:'职称',\r\n            dataIndex:'title'\r\n        },\r\n        {\r\n            title:'号源时间',\r\n            dataIndex:'workDate'\r\n        },\r\n        {\r\n            title:'总预约数',\r\n            dataIndex:'reservedNumber'\r\n        },\r\n        {\r\n            title:'剩余预约数',\r\n            dataIndex:'availableNumber'\r\n        },\r\n        {\r\n            title:'挂号费(元)',\r\n            dataIndex:'amount'\r\n        },\r\n        {\r\n            title:'擅长技能',\r\n            dataIndex:'skill'\r\n        }\r\n    ]\r\n\r\n    const height = document.documentElement.clientHeight - 100 - 80// 根据可视区，动态计算科室列表高度\r\n    // 定义状态\r\n    let [departmentList,setDepartmentList] = useState<IDepartmentList>([])\r\n    let [expandedKeys,setExpandedKeys] = useState<string[]>([])// 展开一级科室节点状态的数组\r\n    let [depcode,setDepcode] = useState<string>()// 当前科室编号\r\n    let [depname,setDepname] = useState<string>()// 当前科室名\r\n    // 分页相关状态\r\n    let [page,setPage] = useState<number>(1)\r\n    let [pageSize,setPageSize] = useState<number>(5)\r\n    let [total,setTotal] = useState<number>(10)\r\n    // 排班日期相关状态\r\n    let [bookingScheduleList,setBookingScheduleList] = useState<IScheduleList>()\r\n    let [hosname,setHosname] = useState<string>()\r\n    let [workDate,setWorkDate] = useState<string>()\r\n    // 医生列表状态\r\n    let [doctorList,setDoctorList] = useState<IDoctorList>([])\r\n    let [loading,setLoading] = useState<boolean>(false)\r\n\r\n    // 获取科室列表并设置响应状态\r\n    const _getDepartmentList = async () => {\r\n        let departmentList = await getDepartmentList(hoscode as string)\r\n        console.log({departmentList});\r\n        // 将一级科室禁用，手段就是给一级科室的对象加上 disabled = true的属性和值\r\n        departmentList = departmentList.map(item=>{\r\n            item.disabled = true;\r\n            return item\r\n        })\r\n        // 默认展开所有一级科室的子节点，就是让所有一级科室的depcode放到一个数组中，给expandedKeys属性赋值即可\r\n        let expandedKeys = departmentList.map(item=>item.depcode)\r\n        setExpandedKeys(expandedKeys)\r\n\r\n        // 设置默认被选中的科室编号和科室名\r\n        setDepcode((departmentList[0].children as IDepartmentList)[0].depcode);\r\n        setDepname((departmentList[0].children as IDepartmentList)[0].depname);\r\n        setDepartmentList(departmentList);\r\n    }\r\n\r\n    // 获取排班日期分页数据\r\n    const _getScheduleList = async () => {\r\n        let {bookingScheduleList,total,baseMap:{hosname}} = await getScheduleList(page, pageSize, hoscode as string, depcode as string);\r\n        // 设置状态数据\r\n        setTotal(total)\r\n        setHosname(hosname)\r\n        setBookingScheduleList(bookingScheduleList)\r\n        // 设置排班日期第一项的日期为默认的日期状态\r\n        setWorkDate(bookingScheduleList[0].workDate);\r\n    }\r\n\r\n    // 获取排班医生列表\r\n    const _getDoctorList = async ()=>{\r\n        let doctorList = await getDoctorList(hoscode as string, depcode as string, workDate as string);\r\n        setDoctorList(doctorList);\r\n        // console.log(doctorList);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        hoscode && _getDepartmentList()// 监听depcode，当科室变化的时候，重新获取该科室下的排班日期\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        depcode && _getScheduleList()\r\n    },[depcode,page,pageSize])\r\n\r\n    useEffect(()=>{\r\n        workDate && _getDoctorList()\r\n    },[workDate])\r\n\r\n    return (\r\n        <Card>\r\n            <div>选择：{hosname} / {depname} / {workDate}</div>\r\n            <Row className='mt' gutter={30}>\r\n                <Col span={6}>\r\n                    <div style={{ border: '1px solid #ddd', height,overflowY:'scroll'}}>\r\n                        <Tree\r\n                            // onSelect={onSelect}\r\n                            // onCheck={onCheck}\r\n                            treeData={departmentList as []}\r\n                            // 自定义映射渲染字段\r\n                            fieldNames={{\r\n                                title:'depname',\r\n                                key:'depcode'\r\n                            }}\r\n                            expandedKeys={expandedKeys}\r\n                            selectedKeys={[depcode as string]}\r\n                            // 节点选中触发\r\n                            onSelect={(selectKeys:any,info:any)=>{\r\n                                console.log({selectKeys});\r\n                                console.log({info});\r\n                                setDepcode(info.node.depcode)\r\n                                setDepname(info.node.depname)\r\n                                \r\n                                \r\n                            }}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n                <Col span={18}>\r\n                    {bookingScheduleList?.map(item => (\r\n                        <Tag key={item.workDate} color={workDate===item.workDate ? 'green' : ''} onClick={()=>{\r\n                            setWorkDate(item.workDate);// 点击tag，设置workDate\r\n                        }}>\r\n                            <div>{item.workDate} {item.dayOfWeek}</div>\r\n                            <div>{item.availableNumber} / {item.reservedNumber}</div>\r\n                        </Tag>\r\n                    ))}\r\n                    <Pagination \r\n                        className='mt'\r\n                        showSizeChanger={true} \r\n                        pageSizeOptions={[5, 10, 20]}\r\n                        current={page}\r\n                        pageSize={pageSize}\r\n                        total={total}\r\n                        onChange={(page:number,pageSize:number)=>{\r\n                            setPage(page)\r\n                            setPageSize(pageSize)\r\n                        }}\r\n                    />\r\n\r\n                    {(bookingScheduleList as IScheduleList)?.length !== 0 && <Table\r\n                        className=\"mt\"\r\n                        columns={columns}\r\n                        dataSource={doctorList}\r\n                        rowKey={'id'}\r\n                        pagination={false}\r\n                    />}\r\n                    <Button className='mt'>返回</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card>\r\n    )\r\n}\r\n"],"names":["getDistrictList","id","request","getHospitalList","page","limit","hosname","hoscode","hostype","provinceCode","cityCode","districtCode","status","params","getHospitalDetail","toggleState","getDepartmentList","getScheduleList","depcode","getDoctorList","workDate","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","_classNames","customizePrefixCls","prefixCls","className","checked","onChange","onClick","restProps","getPrefixCls","React","ConfigContext","cls","classNames","_defineProperty","concat","_extends","PresetColorRegex","RegExp","PresetColorTypes","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","ref","style","children","icon","color","onClose","closeIcon","_a$closable","closable","props","_React$useContext","direction","_React$useState","_React$useState2","_slicedToArray","visible","setVisible","isPresetColor","test","tagStyle","backgroundColor","undefined","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","type","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","displayName","CheckableTag","HospitalSchedule","useParams","columns","title","render","value","row","index","pageSize","dataIndex","height","document","documentElement","clientHeight","useState","departmentList","setDepartmentList","expandedKeys","setExpandedKeys","setDepcode","depname","setDepname","setPage","setPageSize","total","setTotal","bookingScheduleList","setBookingScheduleList","setHosname","setWorkDate","doctorList","setDoctorList","_getDepartmentList","console","log","map","item","disabled","_getScheduleList","baseMap","_getDoctorList","useEffect","gutter","span","border","overflowY","treeData","fieldNames","key","selectedKeys","onSelect","selectKeys","info","node","dayOfWeek","availableNumber","reservedNumber","showSizeChanger","pageSizeOptions","current","dataSource","rowKey","pagination"],"sourceRoot":""}